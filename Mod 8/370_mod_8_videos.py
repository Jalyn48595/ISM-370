# -*- coding: utf-8 -*-
"""370_Mod_8_Videos.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YlXLN8Up_rPXx1o1W8ZdeeLDc9g4J3e2

Description: This code demonstrates the use of box plots and t-test to determine differences between groups of samples. It also shoes hypothesis testing and how to handle missing data and outliers.
"""

import pandas as pd
import matplotlib.pyplot as plt
import scipy.stats

desktop_df = pd.read_csv("/content/desktop.csv")
laptop_df = pd.read_csv("/content/laptop.csv")

#generate info and descriptive statistices about the datasets
print('Desktop user details:')
print(desktop_df.head())
print(desktop_df.info())
print()

print('Laptop user details:')
print(laptop_df.head())
print(laptop_df.info())
print()

#print the rows with missing data, axis 1 specifies that we are printing columns
print('Rows with missing data:')
print(laptop_df.loc[laptop_df.isnull().any(axis=1)])
print()

#print the descriptive statistics
print('Desktop descriptive statistics:')
print(desktop_df.describe())
print()
print('Laptop descriptive statistics:')
print(laptop_df.describe())
print()

#remove row with missing spending data before we can successfully plot the data
#30 represents the row that you are dropping
#laptop_spending_df= laptop_df.drop(30)

#outliers will cause the box plot to appear smooshed
#print the row with the large outlying spending value
print('Spending outlier: ')
print(laptop_df.loc[laptop_df['spending']> 5000])
#remove the outlier and the missing data row, square brackets are required to make the numbers a list
laptop_spending_df= laptop_df.drop([30, 34])
print()

#the orange line on the box plots represent the median
#create box plots to show distributions and information about both groups
#fig 1 represents the overall figure/space for the plot, ax1 represents the actual plot box
#subplots means that ax1 will go within fig1

#spending boxplot
fig1, ax1 = plt.subplots()
ax1.set_title('Spending by Desktop and Laptop Users')
ax1.boxplot([desktop_df['spending'], laptop_spending_df['spending'].values])
ax1.set_ylabel('Spending ($)')
ax1.set_xticklabels(['Desktop users', 'Laptop users'])
plt.show
print()
#if the dataset if missing data the box plots may not show up

#find and remove the age outlier
#drop larger row numbers first, as the index values change once a row is removed
print('Age outlier: ')
print(laptop_df.loc[laptop_df['age'] > 90])
laptop_age_df = laptop_df.drop(33)
laptop_age_df = laptop_age_df.drop(31)
print()

#age boxplot
fig1, ax1 = plt.subplots()
ax1.set_title ('Age by Desktop and Laptop Users')
ax1.boxplot([desktop_df['age'].values, laptop_age_df['age'].values])
ax1.set_ylabel('Age')
ax1.set_xticklabels(['Desktop users', 'Laptop users'])
plt.show()
print()

#develop and print the hypothesis
#accept vs reject the hypothesis rather than say true vs false

#spending
print('H0: There is no significant difference in spending amount between\n desktop users and laptop users')
print('H1: There is a significant difference in spending amount between\n desktop users and laptop users')
print()

#age
print('H0: There is no significant difference in age between\n desktop users and laptop users')
print('H1: There is a significant difference in age between\n desktop users and laptop users')
print()

#conduct t-tesing, how the sample mean compares to the expected mean of the results

#spending
print('t-test results for difference in spending between the two groups:')
print(scipy.stats.ttest_ind(desktop_df['spending'], laptop_spending_df['spending']))
print()
#the statisic figure is in standard deviations (units), the larger this number the more likley that there is a real difference between the groups
#pvalue represents the probability of finding the difference of the two samples randomly, less than 0.05 is significant
print('Conclusion: Reject the null hypothesis and conclude that desktop users\n are different than laptop users in spending')
print()

#age
print('t-test results for difference in age between the two groups:')
print(scipy.stats.ttest_ind(desktop_df['age'], laptop_age_df['age']))
print()
print('Conclusion: Fail to reject the null hypothesis and conclude that desktop users\n are not different than laptop users in age')
print()