# -*- coding: utf-8 -*-
"""370_Mod_4_Videos.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RgAH-e0xKg-RBjLbp8L0N8pJoTkf0tA1

Dataframes and data structures, ,pre tools for working with pandas

uses tab seperated values file instead of csv
"""

import pandas as pd

#create a dataframe with a tsv file
#we use sep='\t' to modify the read in process for the tab separated values
df = pd.read_csv("/content/gapminder-1.tsv", sep='\t')

print(df.head())
print()

print(df.tail())
print()

#shape does not require parentheses
print(df.shape)
print

print(df.info())
print()




#save the country column to seperate series(list of data with a name)
country_col = df['country']
print(country_col)
print()

#save and print three columns from the data frame
#note the use of double square brackets
column_sub = df[['country', 'lifeExp', 'pop']]
print(column_sub)
print()

#print a subset (10 rows) from the above column subset
print(column_sub[:10])
print()

#take a 10 row subset of the solumn subset
column_sub_sub = column_sub[:10]
print (column_sub_sub.head(10))

#print range of rows from the full dataframe
print(df[100:111])
print()

#use .loc to take a subset of the data from the 1950s
sub_1950s = df.loc[(df['year'] >= 1950) & (df['year'] <1960)]
print(sub_1950s.head())
print()
print(sub_1950s.tail())
print()





# use groupby to see mead life expectancy by country
country_life_exp = df.groupby('country')['lifeExp'].mean()
print(country_life_exp)
print()

#view the mean life expectancy by country and year
country_le_year = df.groupby(['country', 'year'])['lifeExp'].mean()
print(country_le_year)
print()

#view the life expectancy and population grouped by continent and year
#note the use of double square brackets in the mean calculation
cont_year_stats = df.groupby(['continent', 'year'])[['lifeExp', 'pop']].mean()
print (cont_year_stats)
print()




#print a list of each country in the dataset
print(df['country'].unique())
print()
#save the above list into an object
countries = df['country'].unique()
print(type(countries))
print()

#print the first five countries from the countries list
print(countries[:5])
print()

#print the first country on the list
print(countries[0])
print()

#print the number of unique items in each column
#use .nunique method for this
print(df.nunique())
print()

#print the number of unique continents
print(f'The number of unique continents in the dataframe:')
print(df['continent'].nunique())
print()

#print the number of countries within each countinent
print(df.groupby('continent')['country'].nunique())
print()