# -*- coding: utf-8 -*-
"""370_Mod_3_Videos.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bZJkMfzqf48hFiMfsiMbxyxJeY3yfNdO

Introduction to pandas and data frames
"""

#Pandas

#as in the line below makes pd the alias for pandas
import pandas as pd

#make the code to read the file ("file path")
data = pd.read_csv("/content/bike_share_data.csv")

#header includes the first 5 rows, putting 10 below offers the first 10 rows
#.header is a function, requries parentheses
#print (data.head(10))

#shape is an attribute, not a function so there are no parentheses
#shape prints (rows count, columns count)
#print(data.shape)

#.info is a function, requires parentheses
#.info shows the types of data and null/non null
#print(data.info())

#print descriptive stats: count, mean, std, min, quartiles, max
print('The full descriptive statistics for the bike data:')
print(data.describe())
print()

#print the median, is a function, requires parentheses
print('The median of casual, registered, and count:')
#use square brackets to call one variable within the database, use two sets if calling multiple
print(data[['casual', 'registered', 'count']].median())

#if there is a big difference between mean and median, go with median to describe the middle

#examples of working with individual columns/variables in a dataframe
#print(data['casual']) - only one variable so single square brackets
#print(data['casual'].median())

#group stats by variable and column name
print('The median number of casual and registered riders grouped by hour:')
print(data.groupby(['hr'])[['casual','registered']].median())
print()

#group stats by weekday
print('The median number of casual and registered riders grouped by day:')
print(data.groupby(['weekday'])[['casual', 'registered']].median())
#only one square bracket set is needed in the first group, no matter how much is being grouped
print(data.groupby(['yr', 'weekday'])[['casual', 'registered']].median())


#subslicing data (subsets)
print('Take a subset of the data to only include Friday values:')
friday = data.loc[data['weekday'] == 5]
print(friday.head())
print()

print('Descriptive statistics for Friday data:')
print (friday.describe())
print()

print('Work day descriptive statistics:')
print('Take a subset of data to only include work days:')
workday = data.loc[data['workingday'] ==1]
print(workday.describe())
print()