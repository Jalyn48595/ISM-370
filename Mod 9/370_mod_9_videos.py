# -*- coding: utf-8 -*-
"""370_Mod_9_Videos.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11dDlEugpXFoAbTbNXm8-OTPmi1-viMcr

Description: Using AB testing to determine which font color leads to higher revenue.
Created by Jalyn Buthman

A/B Testing


1.   Hypothesis formation
2.   Sample splitting
3.   Implementation
4.   Data Collection
5.   Statistical analysis
6.   Decision making
7.   Iterative Process
"""

#a is the control group
#b is the treatment group

import pandas as pd
import numpy as np
import scipy.stats
from statsmodels.stats.power import TTestIndPower

print('Hypotheses:')
print('H0: Changing the color of email text from black to blue will have no effect on revenue.')
print('H1: Changing the color of email text from black to blue will lead to more revenue.')
print()

#print the header and shape of the data
laptop_df = pd.read_csv('/content/laptop.csv')
print(laptop_df.head())
print(laptop_df.shape)
print()

#type 2 error, a failue to detect a real effect/relationship/difference in the population you're studying
#large sample sizes have less risk of a type 2 error
#power analysis, the probability of correctly rejecting the null hypothesis when it is false
#power is typically 0.8

#conduct a power analysis to determine the min sample size for the test
#alpha represents the p value, the min probability of finding a conclusion based on randomness, usually .05
#effect, measure of real world significance, .5 is a medium effect size
#TTest will look for these specific vaiable names
print('Power analysis to determine minimum sample size for each group: ')
analysis = TTestIndPower()
alpha = .05
effect = .5
power = .8
observations = analysis.solve_power(effect_size=effect, power= power, alpha=alpha)
print(f'The minimum sample size for each group is {observations}.')
#since our sample size is smaller than the min sample size we will have a higher risk of a type two error

#use numpy to take random samples for A and B groups
np.random.seed(18811015)
laptop_df.loc[:, 'groupassignment1'] = 1*(np.random.random(len(laptop_df.index))>0.5)
group_a = laptop_df.loc[laptop_df['groupassignment1'] == 0, :].copy()
group_b = laptop_df.loc[laptop_df['groupassignment1'] == 1, :].copy()
#print(laptop_df.head())
#print(group_a.shape)
#print(group_b.shape)
#print()

results_df = pd.read_csv('/content/emailresults2.csv')
print(results_df.head())
print()

#join the datasets on user id
group_a_revenue = group_a.merge(results_df, on='userid')
group_b_revenue = group_b.merge(results_df, on='userid')
print(group_a_revenue.head())
print(group_a_revenue.shape)
print(group_b_revenue.head())
print()

print('Mean of revenue for each group:')
mean_a = np.mean(group_a_revenue['revenue'])
mean_b = np.mean(group_b_revenue['revenue'])
print(f'Revenue for group A: {mean_a}.')
print(f'Revenue for group B: {mean_b}.')
print()

mean_diff = mean_a - mean_b
print(f'The difference in means between groups A and B is {mean_diff}')

#ttest for differences in revenue between groups a and b
print('T-test statistics and results:')
print(scipy.stats.ttest_ind(group_a_revenue['revenue'], group_b_revenue['revenue']))
print()

#effect size, used to quantify the size/magnitude of an relationship/difference/effect in a study
#provides info on the practical or significance of the finding independant of sample size
#evaluates the practical meanings of the findings
#coexd, the standardized difference between two group means
#bar/r?, the strength and direction of a linear relationship between two measures

#conduct effect size analysis
#how many standard deviations the meann difference is away from the mean
#look at the absolute value of the effect size
#an effect size > .2 is a small effect, >.5 is a medium effect, > .8 is a large effect
#effect = the practical effect of the independant variable
print('The effect size of the difference in means between groups A and B:')
print(mean_diff/np.std(results_df['revenue']))
print()
print('The effect size is greater than .8 indicated a large effect. The large effect size tells us that this treatment is worth pursuit.')
print()

#print the conclusions and decisions
print('Reject the null hypothesis and conclude that changing the font color from black to blue led to an increase in revenue.')
print('The blue font color made a difference and led to additional revenue')
print('The company should switch email font color to blue.')
print()