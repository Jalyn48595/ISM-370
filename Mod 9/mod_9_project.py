# -*- coding: utf-8 -*-
"""Mod_9_Project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FdB_Ju4s-y3b0rZOLfjoJshAxsIxnpPC

A/B Testing - Web Purchases
By: Jalyn Buthman
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import scipy.stats
from statsmodels.stats.power import TTestIndPower

#define the hyptheses
print('Hypotheses:')
print('H0: Emailing discount codes to customers for online purchases will have no effect on the number of online purchases.')
print('H1: Emailing discount codes to customers for online purchases will effect the number of online purchases.')
print()

#power analysis to determine the minimum sample size needed
print('Power analysis to determine minimum sample size for each group: ')
analysis = TTestIndPower()
alpha = .05
effect = .8
power = .8
observations = analysis.solve_power(effect_size=effect, power= power, alpha=alpha)
print(f'The minimum sample size for each group is {observations}.')
print()

#read in the datasets
web_a = pd.read_csv('/content/web_purchase_A.csv')
web_b = pd.read_csv('/content/web_purchase_B.csv')

#print the descriptive of the datasets
print('The descriptive statistics for the control group (A):')
print(web_a.describe())
print()
print('The descriptive statistics for the treatment group (B):')
print(web_b.describe())
print()

#create a box plot comparing the NumWebPurchases for both groups
fig1, ax1 = plt.subplots()
ax1.set_title('Web Purchases of People Who Were Emailed a Discount Code vs. People Who Were Not')
ax1.boxplot([web_a['NumWebPurchases'], web_b['NumWebPurchases'].values])
ax1.set_ylabel('Number of Web Purchases')
ax1.set_xticklabels(['Emailed a Discount Code', 'No Discount Code'])
plt.show
print()

#conduct t-testing
print('T-test statistics and results:')
print(scipy.stats.ttest_ind(web_a['NumWebPurchases'], web_b['NumWebPurchases']))
print()

#draw conclusions about the hypotheses
print('Conclusion: Reject the null hypothesis and conclude that there is a significant difference in the number of \n            web purchases of customers who were emailed discounts codes compared to customers who were not.')
print()

#calculate and report the effect size
print('Mean of web purchases for each group:')
mean_a = np.mean(web_a['NumWebPurchases'])
mean_b = np.mean(web_b['NumWebPurchases'])
print(f'Web purchases for group A: {mean_a}.')
print(f'Web purchases for group B: {mean_b}.')
print()

mean_diff = mean_a - mean_b
std_a = np.std(web_a['NumWebPurchases'])
std_b = np.std(web_b['NumWebPurchases'])
avg_std = (std_a + std_b)/2
print('The effect size of the difference in means between group A and group B:')
print(mean_diff/(avg_std))
print()
print('The effect size is -0.088, which is less than 0.2, so it indicates a small effect. The small effect size tells us that this treatment may not be worth pursuit.')
print()