# -*- coding: utf-8 -*-
"""370_Mod_5_Videos.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1chm7gCcVTjiNET3h6R7Wx371_-3daTU4

Examples of plotting using matplotlib and Flagstaff real estate data.
Jalyn Buthman
"""

import pandas as pd
import matplotlib.pyplot as plt

data = pd.read_csv("/content/flagstaff_real_estate.csv")
print(data.head())
print()

#create a histogram to show the distribution of sales prices for one bedroom homes
#the number of bins is the number of columns
#rwidth adds space between the bins
plt.hist(data['ONE_BEDROOM'], bins=10, rwidth=.9)
plt.ylabel('Number of homes')
plt.xlabel('One bedroom home sales prices')
plt.show()

#create a histogram for condos
plt.hist(data['CONDO'], bins=10, rwidth=.9)
plt.ylabel('Number of condos')
plt.xlabel('Condo sales prices')
plt.show()

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

data = pd.read_csv("/content/flagstaff_real_estate.csv")
print(data.head())
print()

#create a list plot showing the average home price over the years
#get a grouping of the average condo price for each year
condo = data.groupby(['YEAR'])['CONDO'].mean()
#print(condo)

#create a unique set of year values to use as the x-axis
year = data ['YEAR'].unique()
#print (year)
sorted_year = np.sort(year)
print(sorted_year)

#the error code from the line below shows that this data is an numpy.ndarray
#print(year.info())
#import numpy to get new tools to sort the data



#plt.plot (dataname[x axis], y axis)
#the below code will give an error because there are 324 x 27 values
#you must add the unique year portion above and change the x axis to 'year'
#plt.plot(data['year'], condo)
plt.plot(sorted_year, condo)
plt.title ('Average condo sales prices by year')
plt.xlabel('Year')
plt.ylabel('Condo Sales Price')
plt.show()
print()

#make sure that the data is going in the right direction by printing condo

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

data = pd.read_csv("/content/flagstaff_real_estate.csv")
print(data.head())
print()

#create a line plot showing the average home prices over the years
#get a grouping of the median home price for each type for each year

condo = data.groupby(['YEAR'])['CONDO'].median()
five = data.groupby(['YEAR'])['FIVE_BEDROOM'].median()
four = data.groupby(['YEAR'])['FOUR_BEDROOM'].median()
three = data.groupby(['YEAR'])['THREE_BEDROOM'].median()
two = data.groupby(['YEAR'])['TWO_BEDROOM'].median()
one = data.groupby(['YEAR'])['ONE_BEDROOM'].median()

year = data['YEAR'].unique()
sorted_year = np.sort(year)

#if the graph says 1e6 at the top left it is showing the y axis in sceintific notation
#modify the settings to show the real values instead of scientific notation
plt.gca().get_yaxis().get_major_formatter().set_scientific(False)
#the above code is not explained, can be memorized or looked up


plt.plot(sorted_year, condo, label= 'Condo')
plt.plot(sorted_year, five, label= 'Five Bedroom')
plt.plot(sorted_year, four, label= 'Four Bedroom')
plt.plot(sorted_year, three, label= 'Three Bedroom')
plt.plot(sorted_year, two, label= 'Two Bedroom')
plt.plot(sorted_year, one, label= 'One Bedroom')
plt.xlabel('Year')
plt.ylabel('Home typle sale price')
plt.legend()
plt.show()

import pandas as pd
import matplotlib.pyplot as plt

data = pd.read_csv("/content/flagstaff_real_estate.csv")
print(data.head())
print()

#create a bar plot showing the average sales price for each home type for the year 2022
#take a subset of 2022 year data
data_2022 = data.loc[data['YEAR'] == 2022]

#create a list of the home types
homes = ['Condo', 'Five', 'Four', 'Three', 'Two', 'One']

#create a list of the average sales price for each home type
sales_price = list(data_2022[['CONDO', 'FIVE_BEDROOM', 'FOUR_BEDROOM', 'THREE_BEDROOM', 'TWO_BEDROOM', 'ONE_BEDROOM']].mean())

#disable scientific notation
plt.gca().get_yaxis().get_major_formatter().set_scientific(False)

plt.bar(homes, sales_price)
plt.title('Mean of home prices by type in 2022')
plt.ylabel('Sales Prices')
plt.xlabel('Home Type')
plt.show()